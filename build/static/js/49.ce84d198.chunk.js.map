{"version":3,"sources":["US.csv","US_FL.csv","daily.js","usa_daily.js","views/Dashboard/Dashboard.js"],"names":["module","exports","Daily","n","a","florida","i","fetch","curday","response","json","data","get_florida","holder","push","length","provinceState","day","date","Date","setDate","getDate","dd","mm","getMonth","getFullYear","Usa_daily","url","vals","Confirmed","lazy","curdayr","brandPrimary","getStyle","brandSuccess","brandInfo","change","cardChartData1","labels","datasets","label","backgroundColor","borderColor","cardChartOpts1","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","legend","display","scales","xAxes","yAxes","cardChartData2","cardChartOpts2","cardChartData4","cardChartOpts4","mainChart","hexToRgba","pointHoverBackgroundColor","borderWidth","mainChartOpts","intersect","mode","position","callbacks","labelColor","tooltipItem","chart","datasetIndex","gridLines","drawOnChartArea","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","get_country","country","confirmed","value","val","orange","county","Counties","admin2","counties_daily","k","florida_total","state_daily","j","parseInt","us_csv","require","fl_csv","Papa","pressed","us_url","Dashboard","props","state","osceola","total","fl_daily","fl_daily_main","us_daily_main","us_daily","fl_options","fl_week","us_estimates","florida_estimates","main_title","loading","className","updateData_us","bind","updateData_fl","toggle","onRadioBtnClick","dropdownOpen","radioSelected","parse","header","dynamicTyping","delimiter","download","complete","this","console","log","country_confirmed","orange_confirmed","state_confirmed","us_daily_main_vals","us_daily_vals","slice","daily_vals_main","daily_vals","oc_daily_vals","state_daily_vals","state_daily_main","setState","formatNumber","navigation","items","name","store","store2","us_esitmates","result","final","predicted_current_infected_mean","num","toString","replace","Row","Col","Card","CardBody","sm","CardTitle","ButtonToolbar","aria-label","ButtonGroup","Button","color","onClick","active","style","height","marginTop","options","CardFooter","md","Progress","xs","lg","Component"],"mappings":"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","file":"static/js/49.ce84d198.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/US.1adb968c.csv\";","module.exports = __webpack_public_path__ + \"static/media/US_FL.7f1c441e.csv\";","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst daily_url = \"https://covid19.mathdro.id/api/daily/\";\r\nconst Daily = async (n) => {\r\n  let response;\r\n  let data;\r\n  let florida = [];\r\nlet holder;\r\nlet val = 0;\r\nfor(let i =1;i<n;i++)\r\n{\r\n  response = await fetch(daily_url+curday(i));\r\n  data = await response.json();\r\n  holder = await get_florida(data);\r\n  florida.push(holder);\r\n}\r\nreturn florida;\r\n\r\n}\r\n\r\nconst get_florida = async(data)=>{\r\n  let florida =[];\r\n  for (let i = 0; i < data.length; i++) {\r\n    if(data[i].provinceState==\"Florida\")\r\n    {\r\n      florida.push(data[i]);\r\n    }\r\n  }\r\n  return florida;\r\n}\r\n\r\nconst curday =(day)=> {\r\nconst dash = \"-\"\r\nlet date = new Date();\r\ndate.setDate(date.getDate() - day);\r\nvar dd = date.getDate();\r\nvar mm = date.getMonth()+1; //As January is 0.\r\nvar yyyy = date.getFullYear();\r\n\r\nif(dd<10) dd='0'+dd;\r\nif(mm<10) mm='0'+mm;\r\nreturn (mm+dash+dd+dash+yyyy);\r\n};\r\n\r\nexport default Daily;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n\r\nconst Usa_daily = async (url) =>{\r\n  let vals = [];\r\n\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  for(let i =0; i<data.length;i++)\r\n  {\r\n    vals[i] = data[i].Confirmed;\r\n  }\r\n\r\n  return vals;\r\n}\r\n\r\nexport default Usa_daily;\r\n","import React, { Component, lazy, Suspense, useState } from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table,\r\n} from 'reactstrap';\r\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\r\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities'\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport navigation from '../../_nav';\r\nimport Florida from \"../../florida\";\r\nimport Counties from \"../../counties\";\r\nimport Daily from \"../../daily\";\r\nimport Usa_daily from \"../../usa_daily\";\r\n\r\n\r\nconst Widget03 = lazy(() => import('../../views/Widgets/Widget03'));\r\nconst curday =(day)=> {\r\nconst dash = \"-\"\r\nlet date = new Date();\r\ndate.setDate(date.getDate() - day);\r\nvar dd = date.getDate();\r\nvar mm = date.getMonth()+1; //As January is 0.\r\nvar yyyy = date.getFullYear();\r\n\r\nif(dd<10) dd='0'+dd;\r\nif(mm<10) mm='0'+mm;\r\nreturn (mm+dash+dd+dash+yyyy);\r\n};\r\n\r\nconst curdayr =(day)=> {\r\nconst dash = \"-\"\r\nlet date = new Date();\r\ndate.setDate(date.getDate() - day);\r\nvar dd = date.getDate();\r\nvar mm = date.getMonth()+1; //As January is 0.\r\nvar yyyy = date.getFullYear();\r\n\r\nif(dd<10) dd='0'+dd;\r\nif(mm<10) mm='0'+mm;\r\nreturn (yyyy+dash+mm+dash+dd);\r\n};\r\n\r\n\r\n\r\nconst brandPrimary = getStyle('--primary')\r\nconst brandSuccess = getStyle('--success')\r\nconst brandInfo = getStyle('--info')\r\nconst brandWarning = getStyle('--warning')\r\nconst brandDanger = getStyle('--danger')\r\nconst daily_url =\"https://covid19.mathdro.id/api/daily/\";\r\nlet change = false;\r\n\r\n\r\n// Card Chart 1\r\nconst cardChartData1 = {\r\n    labels: [curday(7), curday(6), curday(5), curday(4), curday(3), curday(2), curday(1)],\r\n  datasets: [\r\n    {\r\n      label: 'Confirmed Cases',\r\n      backgroundColor: brandPrimary,\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [0,0,0,0,0,0,0],\r\n    },\r\n  ],\r\n};\r\n\r\n\r\nconst cardChartOpts1 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n      }],\r\n  },\r\n};\r\n\r\n\r\n// Card Chart 2\r\nconst cardChartData2 = {\r\n  labels:[curday(7), curday(6), curday(5), curday(4), curday(3), curday(2), curday(1)],\r\n  datasets: [\r\n    {\r\n      label: 'Confirmed Cases',\r\n      backgroundColor: brandInfo,\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [0, 0, 0, 0, 0, 0, 0],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts2 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n      }],\r\n  },\r\n};\r\n\r\n// Card Chart 3\r\nconst cardChartData3 = {\r\n  labels:  [curday(7), curday(6), curday(5), curday(4), curday(3), curday(2), curday(1)],\r\n  datasets: [\r\n    {\r\n      label: 'Confirmed Cases',\r\n      backgroundColor: 'rgba(255,255,255,.2)',\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [150000, 150000, 150000, 150000, 150000, 150000, 150000],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts3 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n      }],\r\n  },\r\n};\r\n\r\n// Card Chart 4\r\nconst cardChartData4 = {\r\n  labels:  [curday(7), curday(6), curday(5), curday(4), curday(3), curday(2), curday(1)],\r\n  datasets: [\r\n    {\r\n      label: 'Confirmed Cases',\r\n      backgroundColor: 'rgba(255,255,255,.2)',\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [0, 0, 0, 0, 0, 0, 0],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts4 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n      }],\r\n  },\r\n};\r\n\r\n\r\n\r\n// Main Chart\r\n\r\n\r\n\r\n\r\nconst mainChart = {\r\n  labels: [curday(28), curday(27), curday(26), curday(25), curday(24), curday(23), curday(22), curday(21), curday(20), curday(19), curday(18), curday(17), curday(16)\r\n  , curday(15), curday(14), curday(13), curday(12), curday(11), curday(10), curday(9), curday(8), curday(7), curday(6), curday(5), curday(4), curday(3), curday(2), curday(1)],\r\n  datasets: [\r\n    {\r\n      label: 'Confirmed Cases',\r\n      backgroundColor: hexToRgba(brandInfo, 10),\r\n      borderColor: brandInfo,\r\n      pointHoverBackgroundColor: '#fff',\r\n      borderWidth: 2,\r\n      data: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    },\r\n    {\r\n      label: 'Projections Mean',\r\n      backgroundColor: 'transparent',\r\n      borderColor: brandSuccess,\r\n      pointHoverBackgroundColor: '#fff',\r\n      borderWidth: 2,\r\n      data: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    },\r\n  ],\r\n};\r\n\r\nconst mainChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips,\r\n    intersect: true,\r\n    mode: 'index',\r\n    position: 'nearest',\r\n    callbacks: {\r\n      labelColor: function(tooltipItem, chart) {\r\n        return { backgroundColor: chart.data.datasets[tooltipItem.datasetIndex].borderColor }\r\n      }\r\n    }\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          drawOnChartArea: false,\r\n        },\r\n      }],\r\n    yAxes: [\r\n      {\r\n      }],\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 1,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\nconst country_url = \"https://covid19.mathdro.id/api/countries/USA\";\r\nconst confirmed_url = \"https://covid19.mathdro.id/api/countries/USA/confirmed\";\r\nconst get_country = async () => {\r\nconst response = await fetch(country_url);\r\nconst country = await response.json();\r\nlet val = await country.confirmed.value;\r\nreturn val;\r\n}\r\n\r\n\r\n\r\nconst orange = async (county)=>{\r\n  let val;\r\n  let data = await Counties();\r\n  for(let i = 0; i<data.length;i++){\r\n    if(data[i].admin2==county){\r\n      val=data[i].confirmed;\r\n    }\r\n  }\r\n  return val;\r\n}\r\n\r\nconst counties_daily = async (data,county)=>{\r\n  let val=[];\r\n  for(let i = 0; i<data.length;i++){\r\n    for(let k = 0; k<data[i].length;k++){\r\n    if(data[i][k].admin2==county){\r\n      val[6-i]=data[i][k].confirmed;\r\n    }\r\n  }\r\n  }\r\n  return val;\r\n}\r\n\r\nconst florida_total = async ()=>{\r\n  let val=0;\r\n  let data = await Counties();\r\n  for(let i = 0; i<data.length;i++){\r\n    val+=data[i].confirmed;\r\n  }\r\n  return val;\r\n}\r\n\r\n\r\n\r\nconst state_daily = async (data,n)=>{\r\n  let val =[];\r\n  for(let j =0; j<n+1;j++)\r\n  {\r\n    val.push(0);\r\n  }\r\n  for(let i = 0; i<data.length;i++){\r\n    for(let k=0;k<data[i].length;k++){\r\nval[n-i]=parseInt(val[n-i])+parseInt(data[i][k].confirmed);\r\n  }\r\n}\r\nreturn val;\r\n}\r\nlet est = {}\r\nconst csv_data = (data)=>{\r\n  \t\test = data;\r\n}\r\n\r\n\r\nvar us_csv = require('../../US.csv');\r\nvar fl_csv = require('../../US_FL.csv');\r\n\r\n\r\nvar Papa = require(\"papaparse/papaparse.min.js\");\r\n\r\nvar pressed =false;\r\n\r\nvar us_url= \"https://api.covid19api.com/total/country/united-states?from=\" + curdayr(28) +\"T00:00:00Z&to=\" +curdayr(1) +\"T00:00:00Z\";\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    country: {},\r\n    orange: {},\r\n    osceola: {},\r\n    total: {},\r\n    counties_daily:[0,0,0,0,0,0,0] ,\r\n    fl_daily: [0,0,0,0,0,0,0],\r\n    fl_daily_main: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    us_daily_main: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    us_daily: [0,0,0,0,0,0,0],\r\n    fl_options: {},\r\n    county: \"\",\r\n    change: false,\r\n    fl_week: [],\r\n    us_estimates: {},\r\n    florida_estimates: {},\r\n    main_title: \"\",\r\n  }\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData_us = this.updateData_us.bind(this);\r\n    this.updateData_fl = this.updateData_fl.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n    };\r\n\r\n\r\n\r\n    this.state.main_title=\"Florida Confirmed Covid Cases vs Estimates\";\r\n    this.state.fl_options = cardChartOpts1;\r\n    this.state.county = \"Orange\";\r\n  }\r\n\r\n\r\n\r\n    async componentDidMount(){\r\n\r\n      Papa.parse(us_csv, {\r\n        header: true,\r\n        dynamicTyping: false,\r\n        delimiter: \",\",\r\n        download: true,\r\n      \tcomplete:  this.updateData_us,\r\n      \t}\r\n      );\r\n\r\n      Papa.parse(fl_csv, {\r\n        header: true,\r\n        dynamicTyping: false,\r\n        delimiter: \",\",\r\n        download: true,\r\n        complete:  this.updateData_fl,\r\n        }\r\n      );\r\n\r\n      console.log(this.state.florida_estimates)\r\n    const country_confirmed = await get_country();\r\n    const orange_confirmed = await orange(this.state.county);\r\n    const state_confirmed = await florida_total();\r\n    const us_daily_main_vals = await Usa_daily(us_url);\r\n    console.log(us_url);\r\n    const us_daily_vals = us_daily_main_vals.slice(21,28);\r\n    const daily_vals_main = await Daily(29);\r\n    const daily_vals = daily_vals_main.slice(0,7);\r\n    const oc_daily_vals = await counties_daily(daily_vals,this.state.county);\r\n    const state_daily_vals = await state_daily(daily_vals,6);\r\n    const state_daily_main = await state_daily(daily_vals_main,27);\r\n\r\n    mainChart.datasets[0].data = [...state_daily_main];\r\n    cardChartData1.datasets[0].data = [...state_daily_vals];\r\n    cardChartData2.datasets[0].data = [...oc_daily_vals];\r\n    cardChartData4.datasets[0].data = [...us_daily_vals];\r\n\r\n\r\n\r\n    this.setState({country: this.formatNumber(country_confirmed), orange: this.formatNumber(orange_confirmed), total: this.formatNumber(state_confirmed)\r\n    ,fl_daily: state_daily_vals, counties_daily: oc_daily_vals, us_daily: us_daily_vals, fl_daily_main: state_daily_main,\r\n    county: navigation.items[0].name, fl_week: daily_vals, us_daily_main: us_daily_main_vals});\r\n    let store = this.state.florida_estimates;\r\n    mainChart.datasets[1].data = store;\r\n    this.setState({florida_estimates: store});\r\n\r\n\r\n\r\n  }\r\n\r\n  async componentDidUpdate(){\r\n    let vals;\r\n    let vals2;\r\n    if(change==true){\r\n      change=false;\r\n      const orange_confirmed = await orange(this.state.county);\r\n      const daily_vals = await counties_daily(this.state.fl_week,this.state.county);\r\n      cardChartData2.datasets[0].data =[...daily_vals];\r\n      this.setState({orange: this.formatNumber(orange_confirmed), counties_daily: daily_vals});\r\n    }\r\n\r\n    if(pressed==true && this.state.radioSelected ==1)\r\n    {\r\n\r\n      pressed =false;\r\n      let store = [...this.state.us_estimates];\r\n      let store2 = [...this.state.us_daily_main];\r\n      mainChart.datasets[1].data = [...store];\r\n      mainChart.datasets[0].data = [...store2];\r\n      this.setState({us_esitmates: store, us_daily_main: store2, main_title: \"USA Confirmed Covid Cases vs Estimates\"});\r\n\r\n    }\r\n\r\n    else if (pressed==true && this.state.radioSelected ==2) {\r\n      let store = [...this.state.florida_estimates];\r\n      let store2 = [...this.state.fl_daily_main];\r\n      pressed =false;\r\n      mainChart.datasets[1].data = [...this.state.florida_estimates];\r\n      mainChart.datasets[0].data = [...this.state.fl_daily_main];\r\n\r\n      this.setState({florida_estimates: store, fl_daily_main: store2, main_title: \"Florida Confirmed Covid Cases vs Estimates\"});\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\nasync updateData_us(result) {\r\n    const data = await result.data;\r\n    let vals= {};\r\n    let final = [];\r\n    for(let i =0; i<data.length;i++)\r\n      {\r\n        if(data[i].date == curdayr(1))\r\n        {\r\n          vals = data.slice(i-28,i);\r\n        }\r\n      }\r\n\r\n      for(let k = 0; k<vals.length;k++)\r\n      {\r\n        final[k] = vals[k].predicted_current_infected_mean;\r\n      }\r\n    this.setState({us_estimates: final});\r\n\r\n  }\r\n\r\n\r\n\r\n  async updateData_fl(result) {\r\n      const data = await result.data;\r\n      let final = [];\r\n      let vals= {};\r\n      for(let i =0; i<data.length;i++)\r\n        {\r\n          if(data[i].date == curdayr(1))\r\n          {\r\n            vals = data.slice(i-28,i);\r\n          }\r\n        }\r\n        for(let k = 0; k<vals.length;k++)\r\n        {\r\n          final[k] = vals[k].predicted_current_infected_mean;\r\n        }\r\n      this.setState({florida_estimates: final});\r\n\r\n    }\r\n\r\n  formatNumber(num){\r\n   return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n }\r\n\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    if(radioSelected !=this.state.radioSelected)\r\n    {\r\n    this.setState({\r\n      radioSelected: radioSelected,\r\n    });\r\n\r\n    pressed=true;\r\n\r\n\r\n  }\r\n}\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm=\"5\">\r\n                    <CardTitle className=\"mb-0\">{this.state.main_title}</CardTitle>\r\n                  </Col>\r\n                  <Col sm=\"7\" className=\"d-none d-sm-inline-block\">\r\n                    <ButtonToolbar className=\"float-right\" aria-label=\"Toolbar with button groups\">\r\n                      <ButtonGroup className=\"mr-3\" aria-label=\"First group\">\r\n                        <Button color=\"outline-secondary\" onClick={() => this.onRadioBtnClick(1)} active={this.state.radioSelected === 1}>USA</Button>\r\n                        <Button color=\"outline-secondary\" onClick={() => this.onRadioBtnClick(2)} active={this.state.radioSelected === 2}>Florida</Button>\r\n                      </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"chart-wrapper\" style={{ height: 300 + 'px', marginTop: 40 + 'px' }}>\r\n                  <Line data={mainChart} options={mainChartOpts} height={300} />\r\n                </div>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Row className=\"text-center\">\r\n                  <Col sm={12} md className=\"mb-sm-2 mb-0\">\r\n                    <div className=\"text-muted\">Projections Mean</div>\r\n                    <Progress className=\"progress-xs mt-2\" color=\"success\" value=\"20\" />\r\n                  </Col>\r\n                  <Col sm={12} md className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n                    <div className=\"text-muted\">Confirmed</div>\r\n                    <Progress className=\"progress-xs mt-2\" color=\"info\" value=\"20\" />\r\n                  </Col>\r\n\r\n                </Row>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n        <div onClick={ ()=>{change = true; this.setState({county: navigation.items[0].name}); }}>\r\n        <Florida />\r\n        </div>\r\n\r\n\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-info\">\r\n              <CardBody className=\"pb-0\">\r\n                <div className=\"text-value\">{this.state.orange}</div>\r\n                <div>Current Cases in {this.state.county} County</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\r\n                <Line data={cardChartData2} options={cardChartOpts2} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-primary\">\r\n              <CardBody className=\"pb-0\">\r\n                <div className=\"text-value\">{this.state.total}</div>\r\n                <div>Current Cases in Florida</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\r\n                <Line data={cardChartData1} options={this.state.fl_options} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-danger\">\r\n              <CardBody className=\"pb-0\">\r\n                <div className=\"text-value\">{this.state.country}</div>\r\n                <div>Total Cases in the U.S</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\r\n                <Line data={cardChartData4} options={cardChartOpts4} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}