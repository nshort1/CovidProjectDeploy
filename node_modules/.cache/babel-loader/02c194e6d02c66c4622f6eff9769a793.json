{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProjectDeploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProjectDeploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{memo,useState}from\"react\";import{ZoomableGroup,ComposableMap,Geographies,Geography}from\"react-simple-maps\";import Counties from\"./counties\";import navigation from'./_nav';var geoUrl=\"https://raw.githubusercontent.com/wrislin1/CovidProject/master/Prototype/florida2.json\";var change_county=function change_county(county){navigation.items[0].name=county;//navigation.items[5].children[0] = \"Hello There\";\n};var MapChart=function MapChart(_ref){var setTooltipContent=_ref.setTooltipContent;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ComposableMap,{\"data-tip\":\"\",projectionConfig:{scale:3000},width:800,height:400,style:{width:\"50%\",height:\"25%\",float:\"right\"}},/*#__PURE__*/React.createElement(ZoomableGroup,{onMoveStart:function onMoveStart(){console.log(\"hello\");},center:[-83,27.5]},/*#__PURE__*/React.createElement(Geographies,{geography:geoUrl},function(_ref2){var geographies=_ref2.geographies;return geographies.map(function(geo){return/*#__PURE__*/React.createElement(Geography,{key:geo.rsmKey,geography:geo,onClick:function onClick(){change_county(geo.properties.NAME);},onMouseEnter:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var confirmed,deaths,counties,name,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Counties();case 2:counties=_context.sent;name=geo.properties.NAME;for(i=0;i<counties.length;i++){if(name==counties[i].admin2){confirmed=counties[i].confirmed;deaths=counties[i].deaths;}}setTooltipContent(\"\".concat(name,\" County <br/> Confirmed cases: \").concat(confirmed,\" <br/>\\n                      Deaths: \").concat(deaths));case 6:case\"end\":return _context.stop();}}},_callee);})),onMouseLeave:function onMouseLeave(){setTooltipContent(\"\");},style:{default:{fill:\"black\",outline:\"none\"},hover:{fill:\"#F53\",outline:\"none\"},pressed:{fill:\"#E42\",outline:\"none\"}}});});}))));};export default memo(MapChart);","map":{"version":3,"sources":["C:/Users/sumdewd/Desktop/CovidProjectDeploy/src/MapChart.js"],"names":["React","memo","useState","ZoomableGroup","ComposableMap","Geographies","Geography","Counties","navigation","geoUrl","change_county","county","items","name","MapChart","setTooltipContent","scale","width","height","float","console","log","geographies","map","geo","rsmKey","properties","NAME","counties","i","length","admin2","confirmed","deaths","default","fill","outline","hover","pressed"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAqBC,QAArB,KAAqC,OAArC,CACA,OACEC,aADF,CAEEC,aAFF,CAGEC,WAHF,CAIEC,SAJF,KAKO,mBALP,CAOA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,QAAvB,CAEA,GAAMC,CAAAA,MAAM,CACV,wFADF,CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAW,CAC/BH,UAAU,CAACI,KAAX,CAAiB,CAAjB,EAAoBC,IAApB,CAA2BF,MAA3B,CACA;AAED,CAJD,CAOA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA2B,IAAxBC,CAAAA,iBAAwB,MAAxBA,iBAAwB,CAE1C,mBACE,qDACE,oBAAC,aAAD,EAAe,WAAS,EAAxB,CACA,gBAAgB,CAAE,CAAEC,KAAK,CAAE,IAAT,CADlB,CAEH,KAAK,CAAE,GAFJ,CAGH,MAAM,CAAE,GAHL,CAIH,KAAK,CAAE,CACPC,KAAK,CAAE,KADA,CAEPC,MAAM,CAAE,KAFD,CAGPC,KAAK,CAAE,OAHA,CAJJ,eAWN,oBAAC,aAAD,EAAe,WAAW,CAAE,sBAAI,CAACC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,CAAtD,CAAwD,MAAM,CAAE,CAAE,CAAC,EAAH,CAAM,IAAN,CAAhE,eACU,oBAAC,WAAD,EAAa,SAAS,CAAEZ,MAAxB,EACG,mBAAGa,CAAAA,WAAH,OAAGA,WAAH,OACCA,CAAAA,WAAW,CAACC,GAAZ,CAAgB,SAAAC,GAAG,qBACjB,oBAAC,SAAD,EACE,GAAG,CAAEA,GAAG,CAACC,MADX,CAEE,SAAS,CAAED,GAFb,CAGE,OAAO,CAAG,kBAAI,CAACd,aAAa,CAACc,GAAG,CAACE,UAAJ,CAAeC,IAAhB,CAAb,CAAoC,CAHrD,CAIE,YAAY,sEAAG,8LAGQpB,CAAAA,QAAQ,EAHhB,QAGTqB,QAHS,eAKPf,IALO,CAKAW,GAAG,CAACE,UAAJ,CAAeC,IALf,CAMb,IAAQE,CAAR,CAAU,CAAV,CAAYA,CAAC,CAACD,QAAQ,CAACE,MAAvB,CAA8BD,CAAC,EAA/B,CACA,CACE,GAAGhB,IAAI,EAAIe,QAAQ,CAACC,CAAD,CAAR,CAAYE,MAAvB,CACA,CACEC,SAAS,CAAGJ,QAAQ,CAACC,CAAD,CAAR,CAAYG,SAAxB,CACAC,MAAM,CAAIL,QAAQ,CAACC,CAAD,CAAR,CAAYI,MAAtB,CACD,CACF,CACDlB,iBAAiB,WAAIF,IAAJ,2CAA0CmB,SAA1C,kDACLC,MADK,EAAjB,CAda,sDAAH,EAJd,CAqBE,YAAY,CAAE,uBAAM,CAClBlB,iBAAiB,CAAC,EAAD,CAAjB,CACD,CAvBH,CAwBE,KAAK,CAAE,CACLmB,OAAO,CAAE,CACPC,IAAI,CAAE,OADC,CAEPC,OAAO,CAAE,MAFF,CADJ,CAKLC,KAAK,CAAE,CACLF,IAAI,CAAE,MADD,CAELC,OAAO,CAAE,MAFJ,CALF,CASLE,OAAO,CAAE,CACPH,IAAI,CAAE,MADC,CAEPC,OAAO,CAAE,MAFF,CATJ,CAxBT,EADiB,EAAnB,CADD,EADH,CADV,CAXM,CADF,CADF,CA+DD,CAjED,CAmEA,cAAenC,CAAAA,IAAI,CAACa,QAAD,CAAnB","sourcesContent":["import React, { memo,useState } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nimport Counties from \"./counties\";\r\nimport navigation from './_nav';\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/wrislin1/CovidProject/master/Prototype/florida2.json\";\r\n\r\nconst change_county = (county) =>{\r\n  navigation.items[0].name = county;\r\n  //navigation.items[5].children[0] = \"Hello There\";\r\n\r\n}\r\n\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\"\r\n      projectionConfig={{ scale: 3000 }}\r\n   width={800}\r\n   height={400}\r\n   style={{\r\n   width: \"50%\",\r\n   height: \"25%\",\r\n   float: \"right\",\r\n\r\n}}\r\n>\r\n<ZoomableGroup onMoveStart={()=>{console.log(\"hello\")}} center={[ -83,27.5]} >\r\n          <Geographies geography={geoUrl} >\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onClick ={()=>{change_county(geo.properties.NAME);}}\r\n                  onMouseEnter={ async () => {\r\n                    let confirmed;\r\n                    let deaths;\r\n                    let counties = await Counties();\r\n            \r\n                    const name = geo.properties.NAME;\r\n                    for(let i=0;i<counties.length;i++)\r\n                    {\r\n                      if(name == counties[i].admin2)\r\n                      {\r\n                        confirmed = counties[i].confirmed;\r\n                        deaths =  counties[i].deaths;\r\n                      }\r\n                    }\r\n                    setTooltipContent(`${name} County <br/> Confirmed cases: ${confirmed} <br/>\r\n                      Deaths: ${deaths}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"black\",\r\n                      outline: \"none\"\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n          </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n"]},"metadata":{},"sourceType":"module"}