{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProjectDeploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProjectDeploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useState}from\"react\";import ReactDOM from\"react-dom\";var daily_url=\"https://covid19.mathdro.id/api/daily/\";var Daily=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(n){var response,data,florida,holder,val,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:florida=[];val=0;i=1;case 3:if(!(i<n)){_context.next=17;break;}_context.next=6;return fetch(daily_url+curday(i));case 6:response=_context.sent;_context.next=9;return response.json();case 9:data=_context.sent;_context.next=12;return get_florida(data);case 12:holder=_context.sent;florida.push(holder);case 14:i++;_context.next=3;break;case 17:return _context.abrupt(\"return\",florida);case 18:case\"end\":return _context.stop();}}},_callee);}));return function Daily(_x){return _ref.apply(this,arguments);};}();var get_florida=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var florida,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:florida=[];for(i=0;i<data.length;i++){if(data[i].provinceState==\"Florida\"){florida.push(data[i]);}}return _context2.abrupt(\"return\",florida);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function get_florida(_x2){return _ref2.apply(this,arguments);};}();var curday=function curday(day){var dash=\"-\";var date=new Date();date.setDate(date.getDate()-day);var dd=date.getDate();var mm=date.getMonth()+1;//As January is 0.\nvar yyyy=date.getFullYear();if(dd<10)dd='0'+dd;if(mm<10)mm='0'+mm;return mm+dash+dd+dash+yyyy;};export default Daily;","map":{"version":3,"sources":["C:/Users/sumdewd/Desktop/CovidProjectDeploy/src/daily.js"],"names":["React","useState","ReactDOM","daily_url","Daily","n","florida","val","i","fetch","curday","response","json","data","get_florida","holder","push","length","provinceState","day","dash","date","Date","setDate","getDate","dd","mm","getMonth","yyyy","getFullYear"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,uCAAlB,CACA,GAAMC,CAAAA,KAAK,0FAAG,iBAAOC,CAAP,yJAGRC,OAHQ,CAGE,EAHF,CAKVC,GALU,CAKJ,CALI,CAMNC,CANM,CAMH,CANG,aAMDA,CAAC,CAACH,CAND,iDAQKI,CAAAA,KAAK,CAACN,SAAS,CAACO,MAAM,CAACF,CAAD,CAAjB,CARV,QAQZG,QARY,qCASCA,CAAAA,QAAQ,CAACC,IAAT,EATD,QASZC,IATY,sCAUGC,CAAAA,WAAW,CAACD,IAAD,CAVd,SAUZE,MAVY,eAWZT,OAAO,CAACU,IAAR,CAAaD,MAAb,EAXY,QAMGP,CAAC,EANJ,+DAaPF,OAbO,yDAAH,kBAALF,CAAAA,KAAK,4CAAX,CAiBA,GAAMU,CAAAA,WAAW,2FAAG,kBAAMD,IAAN,oIACdP,OADc,CACL,EADK,CAElB,IAASE,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGK,IAAI,CAACI,MAAzB,CAAiCT,CAAC,EAAlC,CAAsC,CACpC,GAAGK,IAAI,CAACL,CAAD,CAAJ,CAAQU,aAAR,EAAuB,SAA1B,CACA,CACEZ,OAAO,CAACU,IAAR,CAAaH,IAAI,CAACL,CAAD,CAAjB,EACD,CACF,CAPiB,iCAQXF,OARW,0DAAH,kBAAXQ,CAAAA,WAAW,8CAAjB,CAWA,GAAMJ,CAAAA,MAAM,CAAE,QAARA,CAAAA,MAAQ,CAACS,GAAD,CAAQ,CACtB,GAAMC,CAAAA,IAAI,CAAG,GAAb,CACA,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAX,CACAD,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,GAAiBL,GAA9B,EACA,GAAIM,CAAAA,EAAE,CAAGJ,IAAI,CAACG,OAAL,EAAT,CACA,GAAIE,CAAAA,EAAE,CAAGL,IAAI,CAACM,QAAL,GAAgB,CAAzB,CAA4B;AAC5B,GAAIC,CAAAA,IAAI,CAAGP,IAAI,CAACQ,WAAL,EAAX,CAEA,GAAGJ,EAAE,CAAC,EAAN,CAAUA,EAAE,CAAC,IAAIA,EAAP,CACV,GAAGC,EAAE,CAAC,EAAN,CAAUA,EAAE,CAAC,IAAIA,EAAP,CACV,MAAQA,CAAAA,EAAE,CAACN,IAAH,CAAQK,EAAR,CAAWL,IAAX,CAAgBQ,IAAxB,CACC,CAXD,CAaA,cAAexB,CAAAA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst daily_url = \"https://covid19.mathdro.id/api/daily/\";\r\nconst Daily = async (n) => {\r\n  let response;\r\n  let data;\r\n  let florida = [];\r\nlet holder;\r\nlet val = 0;\r\nfor(let i =1;i<n;i++)\r\n{\r\n  response = await fetch(daily_url+curday(i));\r\n  data = await response.json();\r\n  holder = await get_florida(data);\r\n  florida.push(holder);\r\n}\r\nreturn florida;\r\n\r\n}\r\n\r\nconst get_florida = async(data)=>{\r\n  let florida =[];\r\n  for (let i = 0; i < data.length; i++) {\r\n    if(data[i].provinceState==\"Florida\")\r\n    {\r\n      florida.push(data[i]);\r\n    }\r\n  }\r\n  return florida;\r\n}\r\n\r\nconst curday =(day)=> {\r\nconst dash = \"-\"\r\nlet date = new Date();\r\ndate.setDate(date.getDate() - day);\r\nvar dd = date.getDate();\r\nvar mm = date.getMonth()+1; //As January is 0.\r\nvar yyyy = date.getFullYear();\r\n\r\nif(dd<10) dd='0'+dd;\r\nif(mm<10) mm='0'+mm;\r\nreturn (mm+dash+dd+dash+yyyy);\r\n};\r\n\r\nexport default Daily;\r\n"]},"metadata":{},"sourceType":"module"}