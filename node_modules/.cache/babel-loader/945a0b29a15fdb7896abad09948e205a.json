{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProject\\\\src\\\\MapChart.js\";\n\nimport React, { memo, useState } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Counties from \"./counties\";\nimport navigation from './_nav';\nvar geoUrl = \"https://raw.githubusercontent.com/wrislin1/CovidProject/master/Prototype/florida2.json\";\n\nvar change_county = function change_county(county) {\n  navigation.items[0].name = county; //navigation.items[5].children[0] = \"Hello There\";\n};\n\nvar MapChart = function MapChart(_ref) {\n  var setTooltipContent = _ref.setTooltipContent;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 3000\n    },\n    width: 800,\n    height: 400,\n    style: {\n      width: \"50%\",\n      height: \"25%\",\n      float: \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    onMoveStart: function onMoveStart() {\n      console.log(\"hello\");\n    },\n    center: [-83, 27.5],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, function (_ref2) {\n    var geographies = _ref2.geographies;\n    return geographies.map(function (geo) {\n      return /*#__PURE__*/React.createElement(Geography, {\n        key: geo.rsmKey,\n        geography: geo,\n        onClick: function onClick() {\n          change_county(geo.properties.NAME);\n        },\n        onMouseEnter: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var confirmed, deaths, counties, name, i;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return Counties();\n\n                case 2:\n                  counties = _context.sent;\n                  name = geo.properties.NAME;\n\n                  for (i = 0; i < counties.length; i++) {\n                    if (name == counties[i].admin2) {\n                      confirmed = counties[i].confirmed;\n                      deaths = counties[i].deaths;\n                    }\n                  }\n\n                  setTooltipContent(\"\".concat(name, \" County <br/> Confirmed cases: \").concat(confirmed, \" <br/>\\n                      Deaths: \").concat(deaths));\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })),\n        onMouseLeave: function onMouseLeave() {\n          setTooltipContent(\"\");\n        },\n        style: {\n          default: {\n            fill: \"black\",\n            outline: \"none\"\n          },\n          hover: {\n            fill: \"#F53\",\n            outline: \"none\"\n          },\n          pressed: {\n            fill: \"#E42\",\n            outline: \"none\"\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      });\n    });\n  }))));\n};\n\nexport default memo(MapChart);","map":{"version":3,"sources":["C:/Users/sumdewd/Desktop/CovidProject/src/MapChart.js"],"names":["React","memo","useState","ZoomableGroup","ComposableMap","Geographies","Geography","Counties","navigation","geoUrl","change_county","county","items","name","MapChart","setTooltipContent","scale","width","height","float","console","log","geographies","map","geo","rsmKey","properties","NAME","counties","i","length","admin2","confirmed","deaths","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { memo,useState } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nimport Counties from \"./counties\";\r\nimport navigation from './_nav';\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/wrislin1/CovidProject/master/Prototype/florida2.json\";\r\n\r\nconst change_county = (county) =>{\r\n  navigation.items[0].name = county;\r\n  //navigation.items[5].children[0] = \"Hello There\";\r\n\r\n}\r\n\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\"\r\n      projectionConfig={{ scale: 3000 }}\r\n   width={800}\r\n   height={400}\r\n   style={{\r\n   width: \"50%\",\r\n   height: \"25%\",\r\n   float: \"right\",\r\n\r\n}}\r\n>\r\n<ZoomableGroup onMoveStart={()=>{console.log(\"hello\")}} center={[ -83,27.5]} >\r\n          <Geographies geography={geoUrl} >\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onClick ={()=>{change_county(geo.properties.NAME);}}\r\n                  onMouseEnter={ async () => {\r\n                    let confirmed;\r\n                    let deaths;\r\n                    let counties = await Counties();\r\n            \r\n                    const name = geo.properties.NAME;\r\n                    for(let i=0;i<counties.length;i++)\r\n                    {\r\n                      if(name == counties[i].admin2)\r\n                      {\r\n                        confirmed = counties[i].confirmed;\r\n                        deaths =  counties[i].deaths;\r\n                      }\r\n                    }\r\n                    setTooltipContent(`${name} County <br/> Confirmed cases: ${confirmed} <br/>\r\n                      Deaths: ${deaths}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"black\",\r\n                      outline: \"none\"\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n          </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n"]},"metadata":{},"sourceType":"module"}