{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sumdewd\\\\Desktop\\\\CovidProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nvar daily_url = \"https://covid19.mathdro.id/api/daily/\";\n\nvar Daily = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(n) {\n    var response, data, florida, holder, val, i;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            florida = [];\n            val = 0;\n            i = 1;\n\n          case 3:\n            if (!(i < n)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 6;\n            return fetch(daily_url + curday(i));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return response.json();\n\n          case 9:\n            data = _context.sent;\n            _context.next = 12;\n            return get_florida(data);\n\n          case 12:\n            holder = _context.sent;\n            florida.push(holder);\n\n          case 14:\n            i++;\n            _context.next = 3;\n            break;\n\n          case 17:\n            return _context.abrupt(\"return\", florida);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function Daily(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar get_florida = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n    var florida, i;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            florida = [];\n\n            for (i = 0; i < data.length; i++) {\n              if (data[i].provinceState == \"Florida\") {\n                florida.push(data[i]);\n              }\n            }\n\n            return _context2.abrupt(\"return\", florida);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function get_florida(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar curday = function curday(day) {\n  var dash = \"-\";\n  var date = new Date();\n  date.setDate(date.getDate() - day);\n  var dd = date.getDate();\n  var mm = date.getMonth() + 1; //As January is 0.\n\n  var yyyy = date.getFullYear();\n  if (dd < 10) dd = '0' + dd;\n  if (mm < 10) mm = '0' + mm;\n  return mm + dash + dd + dash + yyyy;\n};\n\nexport default Daily;","map":{"version":3,"sources":["C:/Users/sumdewd/Desktop/CovidProject/src/daily.js"],"names":["React","useState","ReactDOM","daily_url","Daily","n","florida","val","i","fetch","curday","response","json","data","get_florida","holder","push","length","provinceState","day","dash","date","Date","setDate","getDate","dd","mm","getMonth","yyyy","getFullYear"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAMC,SAAS,GAAG,uCAAlB;;AACA,IAAMC,KAAK;AAAA,sEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGRC,YAAAA,OAHQ,GAGE,EAHF;AAKVC,YAAAA,GALU,GAKJ,CALI;AAMNC,YAAAA,CANM,GAMH,CANG;;AAAA;AAAA,kBAMDA,CAAC,GAACH,CAND;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQKI,KAAK,CAACN,SAAS,GAACO,MAAM,CAACF,CAAD,CAAjB,CARV;;AAAA;AAQZG,YAAAA,QARY;AAAA;AAAA,mBASCA,QAAQ,CAACC,IAAT,EATD;;AAAA;AASZC,YAAAA,IATY;AAAA;AAAA,mBAUGC,WAAW,CAACD,IAAD,CAVd;;AAAA;AAUZE,YAAAA,MAVY;AAWZT,YAAAA,OAAO,CAACU,IAAR,CAAaD,MAAb;;AAXY;AAMGP,YAAAA,CAAC,EANJ;AAAA;AAAA;;AAAA;AAAA,6CAaPF,OAbO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALF,KAAK;AAAA;AAAA;AAAA,GAAX;;AAiBA,IAAMU,WAAW;AAAA,uEAAG,kBAAMD,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACdP,YAAAA,OADc,GACL,EADK;;AAElB,iBAASE,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGK,IAAI,CAACI,MAAzB,EAAiCT,CAAC,EAAlC,EAAsC;AACpC,kBAAGK,IAAI,CAACL,CAAD,CAAJ,CAAQU,aAAR,IAAuB,SAA1B,EACA;AACEZ,gBAAAA,OAAO,CAACU,IAAR,CAAaH,IAAI,CAACL,CAAD,CAAjB;AACD;AACF;;AAPiB,8CAQXF,OARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXQ,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAWA,IAAMJ,MAAM,GAAE,SAARA,MAAQ,CAACS,GAAD,EAAQ;AACtB,MAAMC,IAAI,GAAG,GAAb;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBL,GAA9B;AACA,MAAIM,EAAE,GAAGJ,IAAI,CAACG,OAAL,EAAT;AACA,MAAIE,EAAE,GAAGL,IAAI,CAACM,QAAL,KAAgB,CAAzB,CALsB,CAKM;;AAC5B,MAAIC,IAAI,GAAGP,IAAI,CAACQ,WAAL,EAAX;AAEA,MAAGJ,EAAE,GAAC,EAAN,EAAUA,EAAE,GAAC,MAAIA,EAAP;AACV,MAAGC,EAAE,GAAC,EAAN,EAAUA,EAAE,GAAC,MAAIA,EAAP;AACV,SAAQA,EAAE,GAACN,IAAH,GAAQK,EAAR,GAAWL,IAAX,GAAgBQ,IAAxB;AACC,CAXD;;AAaA,eAAexB,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst daily_url = \"https://covid19.mathdro.id/api/daily/\";\r\nconst Daily = async (n) => {\r\n  let response;\r\n  let data;\r\n  let florida = [];\r\nlet holder;\r\nlet val = 0;\r\nfor(let i =1;i<n;i++)\r\n{\r\n  response = await fetch(daily_url+curday(i));\r\n  data = await response.json();\r\n  holder = await get_florida(data);\r\n  florida.push(holder);\r\n}\r\nreturn florida;\r\n\r\n}\r\n\r\nconst get_florida = async(data)=>{\r\n  let florida =[];\r\n  for (let i = 0; i < data.length; i++) {\r\n    if(data[i].provinceState==\"Florida\")\r\n    {\r\n      florida.push(data[i]);\r\n    }\r\n  }\r\n  return florida;\r\n}\r\n\r\nconst curday =(day)=> {\r\nconst dash = \"-\"\r\nlet date = new Date();\r\ndate.setDate(date.getDate() - day);\r\nvar dd = date.getDate();\r\nvar mm = date.getMonth()+1; //As January is 0.\r\nvar yyyy = date.getFullYear();\r\n\r\nif(dd<10) dd='0'+dd;\r\nif(mm<10) mm='0'+mm;\r\nreturn (mm+dash+dd+dash+yyyy);\r\n};\r\n\r\nexport default Daily;\r\n"]},"metadata":{},"sourceType":"module"}